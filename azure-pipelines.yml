# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  service: blog

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: config_center_build
    condition: eq('${{service}}', 'configcenter')
    displayName: ConfigCenterBuild
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'secrets.json'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '**'
        TargetFolder: '$(Build.SourcesDirectory)/ConfigCenter/Mango.Service.ConfigCenter'
    - task: Docker@2
      inputs:
        containerRegistry: 'aliyunDockerHub'
        repository: 'chiva_mg_namespace/configcenter'
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/ConfigCenter/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
      inputs:
        containerRegistry: 'aliyunDockerHub'
        repository: 'chiva_mg_namespace/configcenter'
        command: 'push'
        tags: |
          $(tag)

  - job: blog_build
    condition: eq('${{service}}', 'blog')
    displayName: BlogBuild
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'aliyunDockerHub'
        repository: 'chiva_mg_namespace/blog'
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/BlogDockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
      inputs:
        containerRegistry: 'aliyunDockerHub'
        repository: 'chiva_mg_namespace/blog'
        command: 'push'
        tags: |
          $(tag)